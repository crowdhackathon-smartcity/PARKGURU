@using SmartOnStreetParking.Web.Models

@model AddZoneViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="page-title">
    <div class="title_left">
        <h3>Edit Zone</h3>
    </div>
</div>

<div class="clearfix"></div>

<div class="row">
    <div class="col-sm-12,col-md-12,col-lg-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Zone Information</h2>

                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        &nbsp;
                    </li>

                </ul>

                <div class="clearfix"></div>
            </div>

            <div class="x_content">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Zone</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.MemberId)
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParkingMaxDuration, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ParkingMaxDuration, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParkingMaxDuration, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.TimeTableAsJson, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TimeTableAsJson, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TimeTableAsJson, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsPayingZone, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(model => model.IsPayingZone, new { @class = "checkbox-fix" })
                                    @Html.ValidationMessageFor(model => model.IsPayingZone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Visible, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(model => model.Visible, new { @class = "checkbox-fix" })
                                    @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.Deleted)
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Deleted)
                                    @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                        @Html.HiddenFor(model => model.DateCreated)
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        @Html.HiddenFor(model => model.ReferenceId)
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.ReferenceId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ReferenceId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReferenceId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="row">
                            <div class="col-sm-12 col-md-12 col-lg-12">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="5">Timetable</th>
                                        </tr>
                                    </thead>
                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D1.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D1.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D1.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D1.End, new { @class = "form-control" })</td>

                                    </tr>


                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D2.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D2.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D2.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D2.End, new { @class = "form-control" })</td>

                                    </tr>
                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D3.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D3.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D3.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D3.End, new { @class = "form-control" })</td>

                                    </tr>
                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D4.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D4.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D4.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D4.End, new { @class = "form-control" })</td>

                                    </tr>
                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D5.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D5.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D5.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D5.End, new { @class = "form-control" })</td>

                                    </tr>
                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D6.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D6.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D6.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D6.End, new { @class = "form-control" })</td>

                                    </tr>
                                    <tr>
                                        <td>@Html.CheckBoxFor(model => model.D7.Checked, new { @class = "checkbox-fix" }) </td>
                                        <td>@Html.DisplayFor(model => model.D7.Days)</td>
                                        <td>@Html.TextBoxFor(model => model.D7.Start, new { @class = "form-control" })</td>
                                        <td> &nbsp; </td>
                                        <td>@Html.TextBoxFor(model => model.D7.End, new { @class = "form-control" })</td>

                                    </tr>



                                </table>
                            </div>


                        </div>

                        <div class="ln_solid"></div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-success" />
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    </div>
                }


                @*<div>
                    @Html.ActionLink("Back to List", "Index")
                </div>*@


            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
